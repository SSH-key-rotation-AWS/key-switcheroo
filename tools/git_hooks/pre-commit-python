#!/bin/env python3 
import asyncio
import subprocess

def get_files():
    command = "git diff --name-only --diff-filter=ACMRTUXB | grep -E '\.py$'"
    return subprocess.check_output(command, shell=True).decode("utf-8").strip().split("\n")

files = get_files()
print(files)


    



















# echo "Running Black..."
# # Run Black on all Python files in the staged changes
# git diff --cached --name-only --diff-filter=ACMRTUXB | grep -E '\.py$' | xargs black 

# echo "Running Pylint..."
# # Run Pylint on Python files in the staged changes
# git diff --cached --name-only --diff-filter=ACMRTUXB | grep -E '\.py$' | xargs pylint
# # Check the exit code of Pylint
# PYLINT_EXIT_CODE=$?
# if [ $PYLINT_EXIT_CODE -ne 0 ]; then
#   echo "Pylint found issues. Commit aborted."
#   exit 1
# fi

# echo "Running Pyright..."
# # Run Pyright on all Python files in the staged changes
# git diff --cached --name-only --diff-filter=ACMRTUXB | grep -E '\.py$' | xargs pyright
# # Check the exit code of Pyright
# PYRIGHT_EXIT_CODE=$?
# if [ $PYRIGHT_EXIT_CODE -ne 0 ]; then
#   echo "Pyright found type errors. Commit aborted."
#   exit 1
# fi
# echo "Pyright completed successfully."


# echo "All checks completed, commit done."
# exit 0


